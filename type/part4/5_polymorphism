// Polymorphism
// 다른 모양의 코드를 가질 수 있게 해주는 것
// Generic (T) 을 사용하면 됨
// Generic 은 placeholder 타입을 쓸 수 있게 해줌 not concrete type

interface SStorage<T> {
    [key:string]: T
}
// 배열 []
// javascript 에서는 배열이 객체

class LocalStorage<T> {
    private storage: SStorage<T> = {}
    set(key:string, value:T){
        this.storage[key] = value;
    }
    remove(key:string){
        delete this.storage[key]
    }
    get(key:string):T {
        return this.storage[key]
    }
    clear() {
        this.storage = {}
    }
}

const stringStorage = new LocalStorage<string>()

stringStorage.get("key")
stringStorage.set("hello", "how are you")

const booleanStorage = new LocalStorage<boolean>()

booleanStorage.get("xxx")
booleanStorage.set("hello", true)